basePath: /api/v1
definitions:
  api.ActivityItem:
    properties:
      description:
        type: string
      timestamp:
        type: string
      type:
        type: string
    type: object
  api.ActivityStats:
    properties:
      average_response_time_ms:
        type: number
      error_rate:
        type: number
      operations_per_hour:
        additionalProperties:
          type: integer
        type: object
      recent_operations:
        items:
          $ref: '#/definitions/api.OperationStat'
        type: array
    type: object
  api.AgentStats:
    properties:
      active:
        type: integer
      total:
        type: integer
    type: object
  api.ChangePasswordRequest:
    properties:
      current_password:
        type: string
      new_password:
        type: string
      username:
        type: string
    type: object
  api.ConfigSetRequest:
    properties:
      key:
        type: string
      namespace:
        type: string
      value: {}
    type: object
  api.CreateEntityRequest:
    properties:
      content:
        description: Can be string, map, or byte array (base64 encoded)
      id:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  api.CreateUserRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  api.DashboardStatsResponse:
    properties:
      agent_stats:
        $ref: '#/definitions/api.AgentStats'
      issue_stats:
        $ref: '#/definitions/api.IssueStats'
      recent_activity:
        items:
          $ref: '#/definitions/api.ActivityItem'
        type: array
      user_count:
        type: integer
      workspace_count:
        type: integer
    type: object
  api.DatabaseMetrics:
    properties:
      avg_tags_per_entity:
        type: number
      entities_by_status:
        additionalProperties:
          type: integer
        type: object
      entities_by_type:
        additionalProperties:
          type: integer
        type: object
      tags_total:
        type: integer
      tags_unique:
        type: integer
      total_entities:
        type: integer
    type: object
  api.DetailedMemoryMetrics:
    description: Detailed memory usage statistics
    properties:
      alloc_bytes:
        example: 10031960
        type: integer
      heap_alloc_bytes:
        example: 10031960
        type: integer
      heap_idle_bytes:
        example: 4472832
        type: integer
      heap_in_use_bytes:
        example: 11649024
        type: integer
      heap_sys_bytes:
        example: 16121856
        type: integer
      stack_in_use_bytes:
        example: 655360
        type: integer
      sys_bytes:
        example: 21453840
        type: integer
      total_alloc_bytes:
        example: 10685192
        type: integer
    type: object
  api.EntitySizeInfo:
    properties:
      entity_type:
        type: string
      id:
        type: string
      size_bytes:
        type: integer
      tag_count:
        type: integer
    type: object
  api.EntityStats:
    properties:
      created_this_month:
        type: integer
      created_this_week:
        type: integer
      created_today:
        type: integer
      largest_entity:
        $ref: '#/definitions/api.EntitySizeInfo'
      smallest_entity:
        $ref: '#/definitions/api.EntitySizeInfo'
      updated_today:
        type: integer
    type: object
  api.EnvironmentVariables:
    properties:
      ENTITYDB_ADMIN_USER:
        type: string
      ENTITYDB_AUTH_REQUIRED:
        description: Security Settings
        type: string
      ENTITYDB_AUTO_BACKUP:
        type: string
      ENTITYDB_BACKUP_INTERVAL:
        type: string
      ENTITYDB_BACKUP_PATH:
        type: string
      ENTITYDB_CACHE_SIZE:
        description: Performance Settings
        type: string
      ENTITYDB_COMPRESSION:
        type: string
      ENTITYDB_DATASPACE_DEFAULT:
        type: string
      ENTITYDB_HIGH_PERFORMANCE:
        type: string
      ENTITYDB_HOST:
        type: string
      ENTITYDB_HTTP_PORT:
        description: Server Configuration
        type: string
      ENTITYDB_HTTPS_PORT:
        type: string
      ENTITYDB_INSTANCE_ID:
        description: Instance Settings
        type: string
      ENTITYDB_LOG_LEVEL:
        description: Debug & Logging
        type: string
      ENTITYDB_LOG_PATH:
        type: string
      ENTITYDB_MAX_CONNECTIONS:
        type: string
      ENTITYDB_METRICS_ENABLED:
        type: string
      ENTITYDB_QUERY_TIMEOUT:
        type: string
      ENTITYDB_RBAC_ENABLED:
        type: string
      ENTITYDB_SESSION_TIMEOUT:
        type: string
      ENTITYDB_SSL_CERT:
        type: string
      ENTITYDB_SSL_ENABLED:
        type: string
      ENTITYDB_SSL_KEY:
        type: string
      ENTITYDB_STORAGE_PATH:
        description: Storage Configuration
        type: string
      ENTITYDB_WAL_MODE:
        type: string
    type: object
  api.ErrorResponse:
    description: Error information
    properties:
      error:
        example: Invalid request
        type: string
    type: object
  api.FeatureFlagRequest:
    description: Feature flag update request
    properties:
      enabled:
        example: true
        type: boolean
      flag:
        example: new_ui
        type: string
    type: object
  api.HealthMetrics:
    description: System health and performance metrics
    properties:
      database_size_bytes:
        example: 1048576
        type: integer
      entity_count:
        example: 100
        type: integer
      goroutines:
        example: 25
        type: integer
      memory_usage:
        $ref: '#/definitions/api.MemoryMetrics'
      user_count:
        example: 5
        type: integer
    type: object
  api.HealthResponse:
    properties:
      checks:
        additionalProperties:
          type: string
        type: object
      metrics:
        $ref: '#/definitions/api.HealthMetrics'
      status:
        type: string
      timestamp:
        type: string
      uptime:
        type: string
      version:
        type: string
    type: object
  api.IssueStats:
    properties:
      by_priority:
        additionalProperties:
          type: integer
        type: object
      by_status:
        additionalProperties:
          type: integer
        type: object
      total:
        type: integer
    type: object
  api.LogStatusResponse:
    properties:
      level:
        type: string
      subsystems:
        items:
          type: string
        type: array
    type: object
  api.LoginRequest:
    description: Login credentials
    properties:
      password:
        example: password123
        type: string
      username:
        example: admin
        type: string
    type: object
  api.LoginResponse:
    description: Authentication response with session token
    properties:
      expires_at:
        example: "2025-01-01T12:00:00Z"
        type: string
      token:
        example: token_abc123...
        type: string
      user:
        $ref: '#/definitions/api.UserInfo'
    type: object
  api.MemoryMetrics:
    description: Memory usage statistics
    properties:
      alloc_bytes:
        example: 10485760
        type: integer
      num_gc:
        example: 5
        type: integer
      sys_bytes:
        example: 73400320
        type: integer
      total_alloc_bytes:
        example: 20971520
        type: integer
    type: object
  api.MetricDataPoint:
    properties:
      timestamp:
        type: string
      value:
        type: number
    type: object
  api.MetricHistoryResponse:
    properties:
      count:
        type: integer
      data_points:
        items:
          $ref: '#/definitions/api.MetricDataPoint'
        type: array
      end_time:
        type: string
      metric_name:
        type: string
      start_time:
        type: string
      unit:
        type: string
    type: object
  api.OperationStat:
    properties:
      duration_ms:
        type: number
      entity_id:
        type: string
      entity_type:
        type: string
      operation:
        type: string
      timestamp:
        type: string
    type: object
  api.PerformanceMetrics:
    description: Performance and runtime metrics
    properties:
      error_count:
        example: 0
        type: number
      gc_runs:
        example: 3
        type: integer
      http_request_duration_ms:
        example: 223.4
        type: number
      http_requests_total:
        example: 15
        type: number
      index_lookups:
        example: 0
        type: integer
      last_gc_pause_ns:
        example: 140707
        type: integer
      query_cache_hits:
        example: 0
        type: integer
      query_cache_miss:
        example: 0
        type: integer
      query_execution_time_ms:
        example: 2.1
        type: number
      storage_read_duration_ms:
        example: 1.2
        type: number
      storage_write_duration_ms:
        example: 5.8
        type: number
      total_gc_pause_ns:
        example: 236206
        type: integer
    type: object
  api.PublicRBACMetricsResponse:
    properties:
      auth:
        $ref: '#/definitions/api.SimplifiedAuthMetrics'
      sessions:
        $ref: '#/definitions/api.PublicSessionMetrics'
      timestamp:
        type: string
    type: object
  api.PublicSessionMetrics:
    properties:
      active_count:
        type: integer
    type: object
  api.QueryEntityResponse:
    properties:
      entities:
        items:
          $ref: '#/definitions/models.Entity'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  api.RBACMetricsResponse:
    properties:
      auth:
        $ref: '#/definitions/api.SimplifiedAuthMetrics'
      permissions:
        $ref: '#/definitions/api.SimplifiedPermissionMetrics'
      security_events:
        items:
          $ref: '#/definitions/api.SecurityEvent'
        type: array
      sessions:
        $ref: '#/definitions/api.SimplifiedSessionMetrics'
      timestamp:
        type: string
      users:
        $ref: '#/definitions/api.SimplifiedUserMetrics'
    type: object
  api.RelationshipListResponse:
    description: List of entity relationships
    properties:
      count:
        example: 5
        type: integer
      relationships:
        items:
          $ref: '#/definitions/api.RelationshipResponse'
        type: array
    type: object
  api.RelationshipRequest:
    description: Relationship creation data
    properties:
      relationship_type:
        example: contains
        type: string
      source_id:
        example: entity_123
        type: string
      target_id:
        example: entity_456
        type: string
    type: object
  api.RelationshipResponse:
    description: Entity relationship
    properties:
      created_at:
        example: "2025-01-01T10:00:00Z"
        type: string
      id:
        example: rel_789
        type: string
      relationship_type:
        example: contains
        type: string
      source_id:
        example: entity_123
        type: string
      target_id:
        example: entity_456
        type: string
    type: object
  api.ResetPasswordRequest:
    properties:
      password:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  api.SecurityEvent:
    properties:
      details:
        type: string
      id:
        type: string
      status:
        type: string
      timestamp:
        type: string
      type:
        type: string
      username:
        type: string
    type: object
  api.SetLogLevelRequest:
    properties:
      level:
        type: string
    type: object
  api.SetTraceSubsystemsRequest:
    properties:
      clear:
        type: boolean
      disable:
        items:
          type: string
        type: array
      enable:
        items:
          type: string
        type: array
    type: object
  api.SimplifiedAuthMetrics:
    properties:
      failed_logins:
        type: integer
      success_rate:
        type: number
      successful_logins:
        type: integer
    type: object
  api.SimplifiedPermissionMetrics:
    properties:
      cache_hit_rate:
        type: number
      checks_per_second:
        type: number
      total_checks:
        type: integer
    type: object
  api.SimplifiedSessionMetrics:
    properties:
      active_count:
        type: integer
      avg_duration_ms:
        type: number
      total_today:
        type: integer
    type: object
  api.SimplifiedUserMetrics:
    properties:
      admin_count:
        type: integer
      total_users:
        type: integer
    type: object
  api.StatusResponse:
    description: Status message
    properties:
      status:
        example: ok
        type: string
    type: object
  api.StorageMetrics:
    properties:
      avg_read_latency_ms:
        type: number
      avg_write_latency_ms:
        type: number
      cache_hit_rate:
        type: number
      compression_ratio:
        type: number
      database_size_bytes:
        type: integer
      index_size_bytes:
        type: integer
      read_bytes:
        type: integer
      read_operations:
        type: integer
      total_storage_bytes:
        type: integer
      wal_size_bytes:
        type: integer
      write_bytes:
        type: integer
      write_operations:
        type: integer
    type: object
  api.SuccessResponse:
    description: Generic success response
    properties:
      message:
        example: Operation completed successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  api.SystemInfo:
    description: System information and runtime details
    properties:
      current_time:
        example: "2025-05-22T14:27:30.71157084+01:00"
        type: string
      go_version:
        example: go1.24.2
        type: string
      num_cpu:
        example: 8
        type: integer
      num_goroutines:
        example: 24
        type: integer
      start_time:
        example: "2025-05-22T14:25:18.060290081+01:00"
        type: string
      uptime:
        example: 132651279965
        type: integer
      uptime_seconds:
        example: 132.651279965
        type: number
      version:
        example: 2.14.0+
        type: string
    type: object
  api.SystemMetricsResponse:
    properties:
      activity_stats:
        $ref: '#/definitions/api.ActivityStats'
      database:
        $ref: '#/definitions/api.DatabaseMetrics'
      entity_stats:
        $ref: '#/definitions/api.EntityStats'
      environment:
        $ref: '#/definitions/api.EnvironmentVariables'
      memory:
        $ref: '#/definitions/api.DetailedMemoryMetrics'
      performance:
        $ref: '#/definitions/api.PerformanceMetrics'
      storage:
        $ref: '#/definitions/api.StorageMetrics'
      system:
        $ref: '#/definitions/api.SystemInfo'
      temporal:
        $ref: '#/definitions/api.TemporalMetrics'
    type: object
  api.TemporalMetrics:
    properties:
      average_timestamp_age_hours:
        type: number
      non_temporal_tags_count:
        type: integer
      temporal_tags_count:
        type: integer
      temporal_tags_ratio:
        type: number
      time_range_end:
        type: string
      time_range_start:
        type: string
    type: object
  api.UserInfo:
    description: User details
    properties:
      id:
        example: entity_user_admin
        type: string
      roles:
        example:
        - admin
        - user
        items:
          type: string
        type: array
      username:
        example: admin
        type: string
    type: object
  models.Entity:
    properties:
      content:
        items:
          type: integer
        type: array
      created_at:
        description: Timestamps as nanosecond epoch for efficiency
        type: integer
      id:
        type: string
      tags:
        items:
          type: string
        type: array
      updated_at:
        type: integer
    type: object
host: localhost:8085
info:
  contact:
    email: support@entitydb.io
    name: EntityDB Support
  description: A temporal database with pure entity-based architecture
  license:
    name: MIT
    url: https://github.com/osakka/entitydb/blob/main/LICENSE
  termsOfService: https://github.com/osakka/entitydb
  title: EntityDB API
  version: 2.27.0
paths:
  /api/v1/admin/log-level:
    get:
      description: Get the current log level and trace subsystems
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LogStatusResponse'
      security:
      - BearerAuth: []
      summary: Get log level
      tags:
      - admin
    post:
      consumes:
      - application/json
      description: Change the runtime log level
      parameters:
      - description: Log level
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.SetLogLevelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Set log level
      tags:
      - admin
  /api/v1/admin/trace-subsystems:
    get:
      description: Get the currently enabled trace subsystems
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LogStatusResponse'
      security:
      - BearerAuth: []
      summary: Get trace subsystems
      tags:
      - admin
    post:
      consumes:
      - application/json
      description: Enable, disable, or clear trace subsystems
      parameters:
      - description: Trace configuration
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.SetTraceSubsystemsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Configure trace subsystems
      tags:
      - admin
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with username and password using relationship-based
        security
      parameters:
      - description: Login credentials
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Authenticate user
      tags:
      - authentication
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: Logout user by invalidating the current session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - authentication
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh the current session token to extend expiration
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Refresh session token
      tags:
      - authentication
  /api/v1/auth/whoami:
    get:
      consumes:
      - application/json
      description: Get information about the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UserInfo'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get current user information
      tags:
      - authentication
  /api/v1/config:
    get:
      consumes:
      - application/json
      description: Retrieve current system configuration
      parameters:
      - description: Configuration namespace
        in: query
        name: namespace
        type: string
      - description: Configuration key
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Entity'
            type: array
      security:
      - BearerAuth: []
      summary: Get configuration
      tags:
      - configuration
  /api/v1/config/set:
    post:
      consumes:
      - application/json
      description: Update system configuration values
      parameters:
      - description: Configuration data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.ConfigSetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SuccessResponse'
      security:
      - BearerAuth: []
      summary: Set configuration
      tags:
      - configuration
  /api/v1/dashboard/stats:
    get:
      consumes:
      - application/json
      description: Get dashboard statistics and metrics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.DashboardStatsResponse'
      security:
      - BearerAuth: []
      summary: Dashboard statistics
      tags:
      - dashboard
  /api/v1/entities/as-of:
    get:
      consumes:
      - application/json
      description: Retrieve an entity as it existed at a specific point in time
      parameters:
      - description: Entity ID
        in: query
        name: id
        required: true
        type: string
      - description: Timestamp in RFC3339 format
        in: query
        name: as_of
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Entity'
      summary: Get entity as of timestamp
      tags:
      - temporal
  /api/v1/entities/changes:
    get:
      consumes:
      - application/json
      description: Retrieve entities that have changed since a given timestamp
      parameters:
      - description: 'Timestamp in RFC3339 format (default: 1 hour ago)'
        in: query
        name: since
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Entity'
            type: array
      summary: Get recent changes
      tags:
      - temporal
  /api/v1/entities/create:
    post:
      consumes:
      - application/json
      description: Create a new entity with tags and content
      parameters:
      - description: Entity to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.CreateEntityRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Entity'
      summary: Create a new entity
      tags:
      - entities
  /api/v1/entities/diff:
    get:
      consumes:
      - application/json
      description: Compare an entity at two different points in time
      parameters:
      - description: Entity ID
        in: query
        name: id
        required: true
        type: string
      - description: First timestamp in RFC3339 format
        in: query
        name: t1
        required: true
        type: string
      - description: Second timestamp in RFC3339 format
        in: query
        name: t2
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get entity diff
      tags:
      - temporal
  /api/v1/entities/get:
    get:
      consumes:
      - application/json
      description: Retrieve a single entity by its ID
      parameters:
      - description: Entity ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Entity'
      summary: Get entity by ID
      tags:
      - entities
  /api/v1/entities/history:
    get:
      consumes:
      - application/json
      description: Retrieve the history of an entity within a time range
      parameters:
      - description: Entity ID
        in: query
        name: id
        required: true
        type: string
      - description: 'Start timestamp in RFC3339 format (default: 24 hours ago)'
        in: query
        name: from
        type: string
      - description: 'End timestamp in RFC3339 format (default: now)'
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Entity'
            type: array
      summary: Get entity history
      tags:
      - temporal
  /api/v1/entities/list:
    get:
      consumes:
      - application/json
      description: List all entities or filter by various criteria
      parameters:
      - description: Filter by tag (e.g., type:user)
        in: query
        name: tag
        type: string
      - description: Filter by wildcard pattern
        in: query
        name: wildcard
        type: string
      - description: Search content
        in: query
        name: search
        type: string
      - description: Content type for search
        in: query
        name: contentType
        type: string
      - description: Filter by namespace
        in: query
        name: namespace
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Entity'
            type: array
      summary: List entities
      tags:
      - entities
  /api/v1/entities/query:
    get:
      consumes:
      - application/json
      description: Query entities with advanced sorting, filtering, and pagination
      parameters:
      - description: Filter field (e.g., created_at, tag:type)
        in: query
        name: filter
        type: string
      - description: Filter operator (eq, ne, gt, lt, gte, lte, like, in)
        in: query
        name: operator
        type: string
      - description: Filter value
        in: query
        name: value
        type: string
      - description: Sort field (created_at, updated_at, id, tag_count)
        in: query
        name: sort
        type: string
      - description: Sort order (asc, desc)
        in: query
        name: order
        type: string
      - description: Limit results
        in: query
        name: limit
        type: integer
      - description: Offset results
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.QueryEntityResponse'
      summary: Query entities with advanced filters
      tags:
      - entities
  /api/v1/entities/update:
    put:
      consumes:
      - application/json
      description: Update an existing entity's tags and content
      parameters:
      - description: Entity ID (can also be in body)
        in: query
        name: id
        type: string
      - description: Entity update data
        in: body
        name: body
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Entity'
      summary: Update an entity
      tags:
      - entities
  /api/v1/entity-relationships:
    delete:
      consumes:
      - application/json
      description: Delete an existing relationship between two entities
      parameters:
      - description: Source entity ID
        in: query
        name: source_id
        required: true
        type: string
      - description: Type of relationship
        in: query
        name: relationship_type
        required: true
        type: string
      - description: Target entity ID
        in: query
        name: target_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SuccessResponse'
      summary: Delete relationship
      tags:
      - relationships
    get:
      consumes:
      - application/json
      description: Get a specific relationship between two entities
      parameters:
      - description: Source entity ID
        in: query
        name: source_id
        required: true
        type: string
      - description: Type of relationship
        in: query
        name: relationship_type
        required: true
        type: string
      - description: Target entity ID
        in: query
        name: target_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RelationshipResponse'
      summary: Get relationship
      tags:
      - relationships
    post:
      consumes:
      - application/json
      description: Create a new relationship between two entities
      parameters:
      - description: Relationship data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.RelationshipRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.RelationshipResponse'
      summary: Create relationship
      tags:
      - relationships
  /api/v1/entity-relationships/by-source:
    get:
      consumes:
      - application/json
      description: List all relationships where the specified entity is the source
      parameters:
      - description: Source entity ID
        in: query
        name: source_id
        required: true
        type: string
      - description: Filter by relationship type
        in: query
        name: relationship_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RelationshipListResponse'
      summary: List relationships by source
      tags:
      - relationships
  /api/v1/entity-relationships/by-target:
    get:
      consumes:
      - application/json
      description: List all relationships where the specified entity is the target
      parameters:
      - description: Target entity ID
        in: query
        name: target_id
        required: true
        type: string
      - description: Filter by relationship type
        in: query
        name: relationship_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RelationshipListResponse'
      summary: List relationships by target
      tags:
      - relationships
  /api/v1/entity-relationships/by-type:
    get:
      consumes:
      - application/json
      description: List all relationships of a specific type
      parameters:
      - description: Type of relationship
        in: query
        name: relationship_type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RelationshipListResponse'
      summary: List relationships by type
      tags:
      - relationships
  /api/v1/feature-flags:
    get:
      consumes:
      - application/json
      description: Retrieve all feature flags
      parameters:
      - description: Stage filter (alpha, beta, stable)
        in: query
        name: stage
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Entity'
            type: array
      security:
      - BearerAuth: []
      summary: Get feature flags
      tags:
      - configuration
  /api/v1/feature-flags/set:
    post:
      consumes:
      - application/json
      description: Update a feature flag value
      parameters:
      - description: Feature flag data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.FeatureFlagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Entity'
      security:
      - BearerAuth: []
      summary: Set feature flag
      tags:
      - configuration
  /api/v1/metrics/available:
    get:
      consumes:
      - application/json
      description: Get a list of all metrics being collected
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: List available metrics
      tags:
      - metrics
  /api/v1/metrics/history:
    get:
      consumes:
      - application/json
      description: Retrieve historical values for a specific metric
      parameters:
      - description: Metric name (e.g., memory_alloc, entity_count_total)
        in: query
        name: metric_name
        required: true
        type: string
      - description: 'Number of hours to look back (default: 24)'
        in: query
        name: hours
        type: integer
      - description: 'Maximum number of data points (default: 100)'
        in: query
        name: limit
        type: integer
      - description: 'Aggregation level: raw, 1min, 1hour, 1day (default: raw)'
        in: query
        name: aggregation
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.MetricHistoryResponse'
      summary: Get metric history
      tags:
      - metrics
  /api/v1/rbac/metrics:
    get:
      description: Get detailed RBAC metrics including users, authentication, sessions,
        permissions, and security events
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RBACMetricsResponse'
      security:
      - BearerAuth: []
      summary: Get comprehensive RBAC metrics
      tags:
      - rbac
  /api/v1/rbac/metrics/public:
    get:
      description: Get basic RBAC metrics available without authentication
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.PublicRBACMetricsResponse'
      summary: Get public RBAC metrics
      tags:
      - rbac
  /api/v1/system/metrics:
    get:
      consumes:
      - application/json
      description: Get comprehensive system metrics specific to EntityDB
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SystemMetricsResponse'
      summary: EntityDB system metrics
      tags:
      - metrics
  /api/v1/users/change-password:
    post:
      consumes:
      - application/json
      description: Change the current user's password
      parameters:
      - description: Password change data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StatusResponse'
      summary: Change user's own password
      tags:
      - users
  /api/v1/users/create:
    post:
      consumes:
      - application/json
      description: Create a new user entity with authentication credentials
      parameters:
      - description: User data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Entity'
      summary: Create a new user
      tags:
      - users
  /api/v1/users/reset-password:
    post:
      consumes:
      - application/json
      description: Reset a user's password (requires admin permission)
      parameters:
      - description: Password reset data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.StatusResponse'
      summary: Reset user password (admin only)
      tags:
      - users
  /health:
    get:
      consumes:
      - application/json
      description: Get system health status and basic metrics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.HealthResponse'
      summary: Health check
      tags:
      - health
  /metrics:
    get:
      description: Get system metrics in Prometheus format
      produces:
      - text/plain
      responses:
        "200":
          description: Prometheus metrics
          schema:
            type: string
      summary: Prometheus metrics
      tags:
      - metrics
securityDefinitions:
  BearerAuth:
    description: 'Bearer token authentication. Example: "Bearer <token>"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
